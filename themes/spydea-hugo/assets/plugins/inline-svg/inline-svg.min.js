/**
 * SVGInjector v1.1.3 - Fast, caching, dynamic inline SVG DOM injection library
 * https://github.com/iconic/SVGInjector
 *
 * Copyright (c) 2014-2015 Waybury <hello@waybury.com>
 * @license MIT
 */ !(function (t, e) {
  "use strict";
  var r = "file:" === t.location.protocol,
    n = e.implementation.hasFeature(
      "http://www.w3.org/TR/SVG11/feature#BasicStructure",
      "1.1"
    ),
    i =
      Array.prototype.forEach ||
      function (t, e) {
        if (void 0 === this || null === this || "function" != typeof t)
          throw TypeError();
        var r,
          n = this.length >>> 0;
        for (r = 0; n > r; ++r) r in this && t.call(e, this[r], r, this);
      },
    o = {},
    a = 0,
    l = [],
    s = [],
    u = {},
    c = function (t) {
      return t.cloneNode(!0);
    },
    f = function (t, e) {
      (s[t] = s[t] || []), s[t].push(e);
    },
    p = function (t) {
      for (var e = 0, r = s[t].length; r > e; e++)
        !(function (e) {
          setTimeout(function () {
            s[t][e](c(o[t]));
          }, 0);
        })(e);
    },
    d = function (e, n) {
      if (void 0 !== o[e]) o[e] instanceof SVGSVGElement ? n(c(o[e])) : f(e, n);
      else {
        if (!t.XMLHttpRequest)
          return n("Browser does not support XMLHttpRequest"), !1;
        (o[e] = {}), f(e, n);
        var i = new XMLHttpRequest();
        (i.onreadystatechange = function () {
          if (4 === i.readyState) {
            if (404 === i.status || null === i.responseXML)
              return (
                n("Unable to load SVG file: " + e),
                r &&
                  n(
                    "Note: SVG injection ajax calls do not work locally without adjusting security setting in your browser. Or consider using a local webserver."
                  ),
                n(),
                !1
              );
            if (!(200 === i.status || (r && 0 === i.status)))
              return (
                n(
                  "There was a problem injecting the SVG: " +
                    i.status +
                    " " +
                    i.statusText
                ),
                !1
              );
            if (i.responseXML instanceof Document)
              o[e] = i.responseXML.documentElement;
            else if (DOMParser && DOMParser instanceof Function) {
              var t;
              try {
                t = new DOMParser().parseFromString(i.responseText, "text/xml");
              } catch (a) {
                t = void 0;
              }
              if (!t || t.getElementsByTagName("parsererror").length)
                return n("Unable to parse SVG file: " + e), !1;
              o[e] = t.documentElement;
            }
            p(e);
          }
        }),
          i.open("GET", e),
          i.overrideMimeType && i.overrideMimeType("text/xml"),
          i.send();
      }
    },
    v = function (e, r, o, s) {
      var c = e.getAttribute("data-src") || e.getAttribute("src");
      if (!/\.svg/i.test(c))
        return void s(
          "Attempted to inject a file with a non-svg extension: " + c
        );
      if (!n) {
        var f = e.getAttribute("data-fallback") || e.getAttribute("data-png");
        return void (f
          ? (e.setAttribute("src", f), s(null))
          : o
          ? (e.setAttribute(
              "src",
              o + "/" + c.split("/").pop().replace(".svg", ".png")
            ),
            s(null))
          : s(
              "This browser does not support SVG and no PNG fallback was defined."
            ));
      }
      -1 === l.indexOf(e) &&
        (l.push(e),
        e.setAttribute("src", ""),
        d(c, function (n) {
          if (void 0 === n || "string" == typeof n) return s(n), !1;
          var o = e.getAttribute("id");
          o && n.setAttribute("id", o);
          var f = e.getAttribute("title");
          f && n.setAttribute("title", f);
          var p = []
            .concat(
              n.getAttribute("class") || [],
              "injected-svg",
              e.getAttribute("class") || []
            )
            .join(" ");
          n.setAttribute(
            "class",
            (function t(e) {
              e = e.split(" ");
              for (var r = {}, n = e.length, i = []; n--; )
                r.hasOwnProperty(e[n]) || ((r[e[n]] = 1), i.unshift(e[n]));
              return i.join(" ");
            })(p)
          );
          var d = e.getAttribute("style");
          d && n.setAttribute("style", d);
          var v = [].filter.call(e.attributes, function (t) {
            return /^data-\w[\w\-]*$/.test(t.name);
          });
          i.call(v, function (t) {
            t.name && t.value && n.setAttribute(t.name, t.value);
          });
          var h,
            g,
            b,
            m,
            y,
            A = {
              clipPath: ["clip-path"],
              "color-profile": ["color-profile"],
              cursor: ["cursor"],
              filter: ["filter"],
              linearGradient: ["fill", "stroke"],
              marker: ["marker", "marker-start", "marker-mid", "marker-end"],
              mask: ["mask"],
              pattern: ["fill", "stroke"],
              radialGradient: ["fill", "stroke"],
            };
          Object.keys(A).forEach(function (t) {
            (h = t), (b = A[t]), (g = n.querySelectorAll("defs " + h + "[id]"));
            for (var e, r = 0, o = g.length; o > r; r++)
              (y = (m = g[r].id) + "-" + a),
                i.call(b, function (t) {
                  e = n.querySelectorAll("[" + t + '*="' + m + '"]');
                  for (var r = 0, i = e.length; i > r; r++)
                    e[r].setAttribute(t, "url(#" + y + ")");
                }),
                (g[r].id = y);
          }),
            n.removeAttribute("xmlns:a");
          for (
            var $,
              w,
              x = n.querySelectorAll("script"),
              k = [],
              S = 0,
              j = x.length;
            j > S;
            S++
          )
            ((w = x[S].getAttribute("type")) &&
              "application/ecmascript" !== w &&
              "application/javascript" !== w) ||
              (($ = x[S].innerText || x[S].textContent),
              k.push($),
              n.removeChild(x[S]));
          if (k.length > 0 && ("always" === r || ("once" === r && !u[c]))) {
            for (var _ = 0, G = k.length; G > _; _++) Function(k[_])(t);
            u[c] = !0;
          }
          var T = n.querySelectorAll("style");
          i.call(T, function (t) {
            t.textContent += "";
          }),
            e.parentNode.replaceChild(n, e),
            delete l[l.indexOf(e)],
            (e = null),
            a++,
            s(n);
        }));
    },
    h = function (t, e, r) {
      var n = (e = e || {}).evalScripts || "always",
        o = e.pngFallback || !1,
        a = e.each;
      if (void 0 !== t.length) {
        var l = 0;
        i.call(t, function (e) {
          v(e, n, o, function (e) {
            a && "function" == typeof a && a(e), r && t.length === ++l && r(l);
          });
        });
      } else
        t
          ? v(t, n, o, function (e) {
              a && "function" == typeof a && a(e), r && r(1), (t = null);
            })
          : r && r(0);
    };
  "object" == typeof module && "object" == typeof module.exports
    ? (module.exports = exports = h)
    : "function" == typeof define && define.amd
    ? define(function () {
        return h;
      })
    : "object" == typeof t && (t.SVGInjector = h);
})(window, document);
